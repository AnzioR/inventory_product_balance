name: Maven Package


on:
  push:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: make application.property secret data
      run: |
       cd ./src/main/resources
       touch ./application-secret.properties
       echo "${{ secrets.PROPERTY }}" >> ./application-secret.properties
      shell : bash
    
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn -B package --file pom.xml
    
    - name: Web Docker build and push (main)
      if: github.ref_name == 'main'
      run: |
          docker login -u ${{ secrets.yoonminjii }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_REPO }}:latest .
          docker push ${{ secrets.DOCKER_REPO }}:latest
    - name: Web Docker build and push (Else)
      if: github.ref_name != 'master'
      run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_REPO }}:${{ github.ref_name }} .
          docker push ${{ secrets.DOCKER_REPO }}:${{ github.ref_name }}



    - name: Get Github Actions IP
      id: ip
      uses: haythem/public-ip@v1.3

    - name: Configure AWS Credentials For GitHub Actions
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}


    - name: Add Github Actions IP to Security Group
      run: |
        aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

    - name: SSH Remote Commands
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ${{ secrets.AWS_USERNAME }}
        key: ${{ secrets.AWS_SSH_KEY }}
        port: ${{ secrets.AWS_SSH_PORT }}
        script_stop: true
        script: |
          cd /home/ec2-user/deploy
          sudo docker-compose pull
          sudo docker-compose up -d --force-recreate

    - name: Remove Github Actions IP From Security Group
      run: |
        aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
