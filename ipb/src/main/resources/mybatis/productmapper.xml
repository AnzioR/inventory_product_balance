<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ipb.mapper.ProductMapper">


    <select id="select" parameterType="Long" resultType="Product">
        SELECT p.id,p.qnt,p.price,p.cost,p.exp, pi.product_code,pi.name,pi.brand,pi.detail,pi.imgname,c.id,c.name as category_name
        FROM product p
                 INNER JOIN product_info pi ON p.product_info_id = pi.product_code
                 INNER JOIN category c ON pi.category_id = c.id
        WHERE p.id = #{id};
    </select>
    <!--    <select id="selectname" parameterType="String" resultType="Product">-->
    <!--        SELECT * FROM product WHERE name=#{name}-->
    <!--    </select>-->
    <select id="selectall" resultType="Product">
        SELECT p.*, pi.product_code, pi.name, p.cost, p.price,pi.imgname,c.name as category_name,pi.box_qnt
        FROM product p
                 INNER JOIN product_info pi ON p.product_info_id = pi.product_code
                 INNER JOIN category c ON pi.category_id = c.id
    </select>
    <select id="selectcategoryname" parameterType="String" resultType="Product">
        SELECT p.id,
               p.qnt,
               p.price,
               p.cost,
               c.name as category_name,
               p.exp
        FROM product p
                 INNER JOIN category c ON p.category_id = c.id
        WHERE c.name = #{category_name};
    </select>
    <!--    <select id="selectcategorynameall" parameterType="String" resultType="Product">-->
    <!--        SELECT p.id, p.name as product_name, p.qnt, p.price, p.cost, c.name as category_name, p.box_qnt,-->
    <!--        p.exp, p.product_code, p.brand ,p.detail,-->
    <!--        p.imgname-->
    <!--        FROM product p-->
    <!--        INNER JOIN category c ON p.category_id = c.id-->
    <!--        WHERE c.name =#{categoryname};-->
    <!--    </select>-->
    <insert id="insert" parameterType="Product">
        INSERT INTO product
        VALUES (NULL, #{product_info_id}, #{qnt}, #{price}, #{cost}, #{exp})
    </insert>
    <update id="update" parameterType="Product">
        UPDATE product SET qnt=#{qnt}, price=#{price}, cost=#{cost} WHERE id = #{id}
    </update>
    <delete id="delete" parameterType="Long">
        DELETE
        FROM product
        WHERE id = #{id}
    </delete>
<!--    상품은 너무 많이 묶여 있어서 삭제를 진행하면 안돼-->
    <select id="search" parameterType="String" resultType="Product">
        SELECT pi.name, pi.brand, pi.product_code, p.qnt, pi.box_qnt, p.cost, p.price
        FROM product p
                 INNER JOIN product_info pi ON p.product_info_id = pi.product_code
        WHERE name Like CONCAT('%', #{txt}, '%')
    </select>

    <!-- 발주를 했을 때 PRODUCT 테이블의 상품재고 수량을 변경시킨다 -->
    <update id="updateqnt" parameterType="Product">
        UPDATE product SET qnt=#{qnt} WHERE id=#{id};
    </update>

</mapper>