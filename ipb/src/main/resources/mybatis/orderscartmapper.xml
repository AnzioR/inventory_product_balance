<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ipb.mapper.OrdersCartMapper">

    <!-- 발주카트에 담기 -->
    <insert id="insert" parameterType="OrdersCart">
        INSERT INTO orders_cart VALUES (NULL, #{qnt}, #{product_id}, #{store_id} )
    </insert>

    <!-- 발주카트에 담긴 상품 수량 수정  -->
    <update id="update" parameterType="OrdersCart">
        UPDATE orders_cart SET qnt=#{qnt} WHERE id = #{id}
    </update>

    <!-- 발주카트 삭제 : 발주카트에 담긴 상품 자체를 삭제함 -->
    <delete id="delete" parameterType="Long">
        DELETE FROM orders_cart WHERE id = #{id}
    </delete>

    <!-- 발주 카트 조회 : 점포에서 발주카트에 담은 상품 중 아이디번호에 해당되는 내역을 조회 -->
    <select id="select" parameterType="Long" resultType="OrdersCart">
        SELECT oc.*, pi.*, c.*, c.name as category_name
        FROM orders_cart oc
                INNER JOIN product p on p.id = oc.product_id
                INNER JOIN product_info pi on pi.product_code = p.product_info_id
                INNER JOIN category c on c.id = pi.category_id
        WHERE oc.id = #{id}
    </select>

    <!-- 발주 카트 전체 조회 : 본사에서 모든 점포들이 발주카트에 담은 내역 전체를 조회할 수 있음 -->
    <select id="selectall" resultType="OrdersCart">
        SELECT * FROM orders_cart
    </select>

    <!-- 발주카트를 리스트로 만들어서 발주 버튼을 클릭하면 리스트를 넘겨줌 -->
    <select id="cartList" parameterType="Long" resultType="OrdersCart">
        SELECT oc.*, pi.*, c.*, c.name as category_name, p.*,
               p.qnt as product_qnt
        FROM  orders_cart oc
                  INNER JOIN product p on p.id = oc.product_id
                  INNER JOIN product_info pi on pi.product_code = p.product_info_id
                  INNER JOIN category c on c.id = pi.category_id
        WHERE store_id=#{store_id}
    </select>

    <!-- 발주카트 비우기 : 발주카트에 담긴 상품을 삭제하는 기능이 아님! 발주카트가 주문으로 넘어갈때 카트 전체가 비워지는 기능입니다. -->
    <delete id="removeCart" parameterType="Long">
        DELETE FROM orders_cart WHERE store_id = #{store_id}
    </delete>

    <!-- 재고 충분할때 주문 : 상품의 재고수량이 카트에 담긴 재고수량보다 많은 경우, store_id의 orders_cart 정보를 가져온다. -->
    <select id="findOrderableOrders" parameterType="Long" resultType="OrdersCart">
        SELECT oc.* FROM orders_cart oc
                             join product p on p.id = oc.product_id
        where p.qnt >= oc.qnt and store_id = #{store_id}
    </select>

    <!-- 재고 부족할때 주문 : 상품의 재고수량이 카트에 담긴 재고수량보다 적은 경우, store_id의 orders_cart 정보를 가져온다. -->
    <select id="findUnorderableOrders" parameterType="Long" resultType="OrdersCart">
        SELECT oc.* FROM orders_cart oc
                             join product p on p.id = oc.product_id
        where p.qnt &lt; oc.qnt and store_id = #{store_id}
    </select>

    <!-- 발주 카트 리스트 비우기 -->
    <!-- 하나만 지우는 거지만 아이디를 for 문을 돌려서 전부다 지우는 메서드 -->
    <delete id="removeCartList" parameterType="java.util.List">
        DELETE FROM orders_cart WHERE id IN
        <foreach item="item" collection="orderableList" open="(" separator="," close=")">
            #{item.id}
        </foreach>
    </delete>

    <!--  동일한 product_id, store_id가 있는지 확인하는 쿼리  -->
    <select id="selectByProductIdAndStoreId" parameterType="map" resultType="OrdersCart">
        SELECT oc.* FROM orders_cart oc
        WHERE oc.product_id = #{product_id} AND oc.store_id = #{store_id}
    </select>

    <!--  동일한 product_id, store_id가 들어온 경우 order_cart.qnt를 업데이트   -->
    <update id="updateQnt" parameterType="map">
        UPDATE orders_cart SET qnt = #{qnt} WHERE id = #{id}
    </update>

    <!-- 동일한 카트가 존재하는지 확인함 -->
    <select id="exists" parameterType="OrdersCart" resultType="int">
        SELECT COUNT(*)
        FROM orders_cart oc
            JOIN product p ON p.id = oc.product_id
            JOIN product_info pi ON pi.product_code = p.product_info_id
        WHERE product_id = #{product_id} AND store_id = #{store_id}
    </select>

</mapper>